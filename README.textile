h1. Cycle.vim

A vim plugin that allows you to toggle between pairs or lists of related words. The default mappings are the same as those with which you can increment and decrement a number under the cursor: <code><C-A></code> and <code><C-X></code>, respectively.

h2. Customization

You can add your own word groups:

<pre><code>  call AddCycleGroup(['one', 'two', 'three'])
</code></pre>

To deal with conflicts, Cycle.vim also supports adding groups that are specific to a certain filetype:

<pre><code>  call AddCycleGroup('ruby', ['class', 'module'])
  call AddCycleGroup('python', ['else', 'elif'])
</code></pre>

When multiple groups define the same word, groups belonging to specific filetypes will be used instead of global groups. This is useful in the cases above, since in HTML we would want <code>class</code> to cycle with <code>id</code> and Python uses <code>elif</code> while some other languages use <code>else if</code> or <code>elsif</code>.

Providing a list of filetypes is also supported:

<pre><code>  call AddCycleGroup(['ruby', 'eruby', 'perl'], ['else', 'elsif'])
</code></pre>

However, if there are no conflicting cases it is preferable to define all cycle groups in the global namespace, using filetype-specific groups only in case of conflict.

Matches are evaluated in reverse order, so whatever has been defined most recently will take precedence over groups defined previously. Keep this in mind when defining new cycle groups to make sure broad definitions are not matched when they are not desired.


h2. Todo

# The ability to handle pairs: quotes, brackets, html tags, etc.
# Operate on non-lowercase text and retain case
# Put cursor back at beginning of word if it started there

h2. Bugs

# Does not work with speeddating.vim - currently won't work if speeddating is installed.

